value: int type: Key Word row: 1 col: 1
value: main type: id row: 1 col: 6
value: ( type: operator row: 1 col: 10
value: ) type: operatpr row: 1 col: 11
value: { type: operator row: 2 col: 1
value: int type: Key Word row: 3 col: 5
value: a type: id row: 3 col: 9
value: = type: operator row: 3 col: 10
value: 10 type: Int row: 3 col: 11
value: ; type: punctuation row: 3 col: 13
value: System type: id row: 4 col: 5
value: . type: operator row: 4 col: 11
value: out type: id row: 4 col: 12
value: . type: operator row: 4 col: 15
value: println type: id row: 4 col: 16
value: ( type: operator row: 4 col: 23
value: f type: id row: 4 col: 24
value: ( type: operator row: 4 col: 25
value: a type: id row: 4 col: 26
value: ) type: operatpr row: 4 col: 27
value: ) type: operatpr row: 4 col: 29
value: ; type: punctuation row: 4 col: 30
value: } type: operatpr row: 6 col: 1
value: int type: Key Word row: 8 col: 1
value: f type: id row: 8 col: 8
value: ( type: operator row: 8 col: 9
value: int type: Key Word row: 8 col: 10
value: n type: id row: 8 col: 14
value: ) type: operatpr row: 8 col: 15
value: { type: operator row: 9 col: 1
value: if type: Key Word row: 10 col: 5
value: ( type: operator row: 10 col: 8
value: n type: id row: 10 col: 9
value: == type: operator row: 10 col: 10
value: 0 type: Int row: 10 col: 12
value: ) type: operatpr row: 10 col: 13
value: return type: Key Word row: 11 col: 5
value: 0 type: Int row: 11 col: 12
value: ; type: punctuation row: 11 col: 13
value: else type: Key Word row: 12 col: 5
value: return type: Key Word row: 13 col: 5
value: n type: id row: 13 col: 12
value: + type: operator row: 13 col: 13
value: f type: id row: 13 col: 14
value: ( type: operator row: 13 col: 15
value: n type: id row: 13 col: 16
value: - type: operator row: 13 col: 19
value: 1 type: Int row: 13 col: 20
value: ) type: operatpr row: 13 col: 21
value: ; type: punctuation row: 13 col: 22
value: } type: operatpr row: 14 col: 1
