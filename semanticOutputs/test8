A progbody $ 
progbody $ 
program funcbody ; C $ 
program { O } ; C $ 
program { int id E ; O } ; C $ 
program { int id ; O } ; C $ 
program { int id ; int id E ; O } ; C $ 
program { int id ; int id ; O } ; C $ 
program { int id ; int id ; int id E ; O } ; C $ 
program { int id ; int id ; int id ; O } ; C $ 
program { int id ; int id ; int id ; int id E ; O } ; C $ 
program { int id ; int id ; int id ; int id ; O } ; C $ 
program { int id ; int id ; int id ; int id ; id } ; C $ 
program { int id ; int id ; int id ; int id ; id J R assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id R assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = arithexpr G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = term F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = factor H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; statement D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; assignstat ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; variable assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id J R assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id R assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = arithexpr G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = term F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = factor H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; statement D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; assignstat ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; variable assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id J R assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id R assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = arithexpr G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = term F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = factor H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; statement D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; assignstat ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; variable assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id J R assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id R assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = arithexpr G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = term F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = factor H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; statement D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( expr ) then statblock else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( arithexpr G ) then statblock else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( term F G ) then statblock else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( factor H F G ) then statblock else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( Q H F G ) then statblock else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id M H F G ) then statblock else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id J P H F G ) then statblock else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id P H F G ) then statblock else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id H F G ) then statblock else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id F G ) then statblock else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id G ) then statblock else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id relop arithexpr ) then statblock else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > arithexpr ) then statblock else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > term F ) then statblock else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > factor H F ) then statblock else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > Q H F ) then statblock else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id M H F ) then statblock else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id J P H F ) then statblock else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id P H F ) then statblock else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id H F ) then statblock else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id F ) then statblock else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then statblock else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then statement else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( expr ) then statblock else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( arithexpr G ) then statblock else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( term F G ) then statblock else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( factor H F G ) then statblock else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( Q H F G ) then statblock else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id M H F G ) then statblock else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id J P H F G ) then statblock else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id P H F G ) then statblock else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id H F G ) then statblock else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id F G ) then statblock else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id G ) then statblock else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id relop arithexpr ) then statblock else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= arithexpr ) then statblock else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= term F ) then statblock else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= factor H F ) then statblock else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= Q H F ) then statblock else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id M H F ) then statblock else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id J P H F ) then statblock else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id P H F ) then statblock else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id H F ) then statblock else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id F ) then statblock else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then statblock else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then statement else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( expr ) ; else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( arithexpr G ) ; else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( term F G ) ; else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( factor H F G ) ; else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( Q H F G ) ; else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id M H F G ) ; else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id J P H F G ) ; else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id P H F G ) ; else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id H F G ) ; else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id F G ) ; else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id G ) ; else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else statblock ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else statement ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( expr ) ; ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( arithexpr G ) ; ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( term F G ) ; ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( factor H F G ) ; ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( Q H F G ) ; ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id M H F G ) ; ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id J P H F G ) ; ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id P H F G ) ; ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id H F G ) ; ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id F G ) ; ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id G ) ; ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else statblock ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else statement ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( expr ) ; ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( arithexpr G ) ; ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( term F G ) ; ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( factor H F G ) ; ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( Q H F G ) ; ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id M H F G ) ; ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id J P H F G ) ; ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id P H F G ) ; ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id H F G ) ; ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id F G ) ; ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id G ) ; ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; statement D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( expr ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( arithexpr G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( term F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( factor H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( Q H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id M H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id J P H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id P H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id addop term F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or term F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or factor H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or Q H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id M H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id J P H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id P H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; statement D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( expr ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( arithexpr G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( term F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( factor H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( Q H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id M H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id J P H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id P H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id multop factor H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and factor H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; statement D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( expr ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( arithexpr G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( term F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( factor H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not factor H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not Q H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id M H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id J P H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id P H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; statement D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( expr ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( arithexpr G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( term F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( factor H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( Q H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id M H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id J P H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id P H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id multop factor H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and factor H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and Q H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id M H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id J P H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id P H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; statement D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( variable ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id J R ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id R ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; statement D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; assignstat ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; variable assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id J R assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id R assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = arithexpr G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = term F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = factor H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = Q H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id M H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id J P H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id P H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id addop term F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - term F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - factor H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; statement D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( variable ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id J R ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id R ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; statement D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; assignstat ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; variable assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id J R assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id R assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = arithexpr G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = term F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = factor H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = Q H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id M H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id J P H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id P H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id addop term F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - term F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - factor H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; statement D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( variable ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id J R ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id R ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; statement D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; assignstat ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; variable assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id J R assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id R assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = arithexpr G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = term F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = factor H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = Q H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id M H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id J P H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id P H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id addop term F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - term F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - factor H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; statement D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( variable ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id J R ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id R ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; statement D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; assignstat ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; variable assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id J R assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id R assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = arithexpr G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = term F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = factor H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = Q H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id M H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id J P H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id P H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id addop term F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - term F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - factor H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; statement D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( expr ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( arithexpr G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( term F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( factor H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( Q H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id M H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id J P H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id P H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id relop arithexpr ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= arithexpr ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= term F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= factor H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= Q H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id M H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id J P H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id P H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; statement D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( expr ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( arithexpr G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( term F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( factor H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( Q H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id M H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id J P H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id P H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id relop arithexpr ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < arithexpr ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < term F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < factor H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < Q H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id M H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id J P H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id P H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; statement D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( expr ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( arithexpr G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( term F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( factor H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( Q H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id M H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id J P H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id P H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id addop term F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + term F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + factor H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + Q H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id M H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id J P H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id P H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; statement D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( expr ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( arithexpr G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( term F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( factor H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double relop arithexpr ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < arithexpr ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < term F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < factor H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; statement D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( expr ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( arithexpr G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( term F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( factor H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer relop arithexpr ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < arithexpr ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < term F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < factor H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < Q H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id M H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id J P H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id P H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; statement D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; assignstat ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; variable assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id J R assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id R assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id assignop expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = expr ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = arithexpr G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = term F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = factor H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = Q H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id M H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id J P H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id P H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id addop term F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - term F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - factor H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer H F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer F G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer G ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; statement D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( expr ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( arithexpr G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( term F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( factor H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( Q H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id M H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id J P H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id P H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; statement D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( expr ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( arithexpr G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( term F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( factor H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( Q H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id M H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id J P H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id P H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id multop factor H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * factor H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * Q H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id M H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id J P H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id P H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id addop term F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id + term F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id + factor H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id + integer H F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id + integer F G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id + integer G ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id + integer relop arithexpr ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id + integer > arithexpr ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id + integer > term F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id + integer > factor H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id + integer > Q H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id + integer > id M H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id + integer > id J P H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id + integer > id P H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id + integer > id H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id + integer > id F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id + integer > id addop term F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id + integer > id - term F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id + integer > id - factor H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id + integer > id - Q H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id + integer > id - id M H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id + integer > id - id J P H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id + integer > id - id P H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id + integer > id - id H F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id + integer > id - id F ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id + integer > id - id ) ; D } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id + integer > id - id ) ; } ; C $ 
program { int id ; int id ; int id ; int id ; id = integer ; id = integer ; id = integer ; id = integer ; if ( id > id ) then if ( id <= id ) then put ( id ) ; else put ( id ) ; ; else put ( id ) ; ; put ( id or id ) ; put ( id and integer ) ; put ( not id ) ; put ( id and id ) ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; get ( id ) ; id = id - integer ; put ( id >= id ) ; put ( id < id ) ; put ( id + id ) ; put ( double < double ) ; put ( integer < id ) ; id = id - integer ; put ( id ) ; put ( id * id + integer > id - id ) ; } ; $ 
